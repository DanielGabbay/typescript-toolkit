name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for semantic versioning
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - run: npm ci
      
      - run: npm run lint
      
      - run: npm run typecheck
      
      - run: npm run test:coverage
      
      - run: npm run build
      
      # Upload coverage to Codecov (optional)
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: success()
        with:
          fail_ci_if_error: false

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - run: npm ci
      
      - run: npm run build
      
      # Semantic versioning and release
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          semantic_version: 22
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
      
      # Notify release status
      - name: Release Status
        if: always()
        run: |
          if [ "${{ steps.semantic.outputs.new_release_published }}" = "true" ]; then
            echo "✅ New version released: ${{ steps.semantic.outputs.new_release_version }}"
          else
            echo "ℹ️ No release needed (no relevant commits since last release)"
          fi